#ifndef PDT_H
#define PDT_H

#include <stdint.h>
// PAGE TABLE ENTRY 

enum PAGE_PTE_FLAGS {
								// Represents what bits of a 32 bits value
	I86_PTE_PRESENT			=	1,		// 0000000000000000000000000000001
	I86_PTE_WRITABLE		=	2,		// 0000000000000000000000000000010
	I86_PTE_USER			=	4,		// 0000000000000000000000000000100
	I86_PTE_WRITETHOUGH		=	8,		// 0000000000000000000000000001000
	I86_PTE_NOT_CACHEABLE		=	0x10,		// 0000000000000000000000000010000
	I86_PTE_ACCESSED		=	0x20,		// 0000000000000000000000000100000
	I86_PTE_DIRTY			=	0x40,		// 0000000000000000000000001000000
	I86_PTE_PAT			=	0x80,		// 0000000000000000000000010000000
	I86_PTE_CPU_GLOBAL		=	0x100,		// 0000000000000000000000100000000
	I86_PTE_LV4_GLOBAL		=	0x200,		// 0000000000000000000001000000000
   	I86_PTE_FRAME			=	0x7FFFF000 	// 1111111111111111111000000000000
};

typedef uint32_t pt_entry;

#define PT_ENTRY_ADD_ATTRIB(ENTRY, ATTRIB) 	(ENTRY |=  (1 << ATTRIB))
#define PT_ENTRY_DEL_ATTRIB(ENTRY, ATTRIB) 	(ENTRY &= ~(1 << ATTRIB))
#define PT_ENTRY_SET_FRAME(ENTRY, PHYS_ADDR) 	(ENTRY  =  (ENTRY & ~I86_PTE_FRAME) | (PHYS_ADDR & I86_PTE_FRAME))
#define PT_ENTRY_IS_PRESENT(ENTRY) 		(ENTRY & I86_PTE_PRESENT)
#define PT_ENTRY_IS_WRITABLE(ENTRY) 		(ENTRY & I86_PTE_WRITABLE)
#define PT_ENTRY_PFN(ENTRY) 			(ENTRY & I86_PTE_FRAME)

// PAGE DIRECTORY ENTRY

enum PAGE_PDE_FLAGS {
 
	I86_PDE_PRESENT			=	1,		//0000000000000000000000000000001
	I86_PDE_WRITABLE		=	2,		//0000000000000000000000000000010
	I86_PDE_USER			=	4,		//0000000000000000000000000000100
	I86_PDE_PWT			=	8,		//0000000000000000000000000001000
	I86_PDE_PCD			=	0x10,		//0000000000000000000000000010000
	I86_PDE_ACCESSED		=	0x20,		//0000000000000000000000000100000
	I86_PDE_DIRTY			=	0x40,		//0000000000000000000000001000000
	I86_PDE_4MB			=	0x80,		//0000000000000000000000010000000
	I86_PDE_CPU_GLOBAL		=	0x100,		//0000000000000000000000100000000
	I86_PDE_LV4_GLOBAL		=	0x200,		//0000000000000000000001000000000
   	I86_PDE_FRAME			=	0x7FFFF000 	//1111111111111111111000000000000
};
 
typedef uint32_t pd_entry;

#define PD_ENTRY_ADD_ATTRIB(ENTRY, ATTRIB) 	(ENTRY |=  (1 << ATTRIB))
#define PD_ENTRY_DEL_ATTRIB(ENTRY, ATTRIB) 	(ENTRY &= ~(1 << ATTRIB))
#define PD_ENTRY_SET_FRAME(ENTRY, PHYS_ADDR) 	(ENTRY  =  (ENTRY & ~I86_PDE_FRAME) | (PHYS_ADDR & I86_PDE_FRAME))
#define PD_ENTRY_IS_PRESENT(ENTRY) 		(ENTRY & I86_PDE_PRESENT)
#define PD_ENTRY_IS_USER(ENTRY) 		(ENTRY & I86_PDE_USER)
#define PD_ENTRY_IS_4MB(ENTRY) 			(ENTRY & I86_PDE_4MB)
#define PD_ENTRY_IS_WRITABLE(ENTRY) 		(ENTRY & I86_PDE_WRITABLE)
#define PD_ENTRY_PFN(ENTRY) 			(ENTRY & I86_PDE_FRAME)
#define PD_ENTRY_ENABLE_GLOBAL(ENTRY)		(ENTRY |= I86_PDE_CPU_GLOBAL)

#endif
